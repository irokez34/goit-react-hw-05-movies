{"version":3,"file":"static/js/763.ca12826f.chunk.js","mappings":"kOAuDA,UAlDkB,WAChB,IAAAA,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACtBG,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEO,OAFPF,EAAAC,KAAA,EAEZX,GAAa,GAAMU,EAAAE,KAAA,GACAC,EAAAA,EAAAA,IAAUZ,GAAS,KAAD,EAA/BQ,EAAIC,EAAAI,KACVlB,EAAWa,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEjBM,MAAM,yFAAmB,QAEL,OAFKN,EAAAC,KAAA,GAEzBX,GAAa,GAAOU,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAV,EAAA,wBAEvB,kBAVY,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAYbhB,GACF,GAAG,CAACH,IACJ,IAGMoB,EACJ1B,GACAA,EAAQ2B,MACR3B,EAAQ2B,KAAKC,KAAI,SAAAC,GAAK,OACpBC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEC,IACEJ,EAAMK,aAAY,mCAAAC,OACqBN,EAAMK,cAVrD,8EAaME,MAAO,IACPC,IAAI,YAENL,EAAAA,EAAAA,KAAA,QAAAD,SAAOF,EAAMS,QACbN,EAAAA,EAAAA,KAAA,QAAAD,SAAOF,EAAMU,cAXNV,EAAMW,GAYV,IAGT,OACEV,EAAAA,EAAAA,MAAA,OAAKW,UAAU,aAAYV,SAAA,CACxB3B,IAAa4B,EAAAA,EAAAA,KAACU,EAAAA,EAAM,KACrBV,EAAAA,EAAAA,KAAA,MAAAD,SAAKL,MAGX,C","sources":["components/MovieCast.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getActors } from 'fetch/trendingMovies';\nimport { useParams } from 'react-router-dom';\nimport Loader from './Loader';\n\nconst MovieCast = () => {\n  const [allCast, setAllCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getActors(movieId);\n        setAllCast(data);\n      } catch (error) {\n        alert('Виникла помилка');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getCast();\n  }, [movieId]);\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  const actors =\n    allCast &&\n    allCast.cast &&\n    allCast.cast.map(actor => (\n      <li key={actor.id}>\n        <img\n          src={\n            actor.profile_path\n              ? `https://image.tmdb.org/t/p/w300/${actor.profile_path}`\n              : defaultImg\n          }\n          width={150}\n          alt=\"poster\"\n        />\n        <span>{actor.name}</span>\n        <span>{actor.character}</span>\n      </li>\n    ));\n\n  return (\n    <div className=\"movie-cast\">\n      {isLoading && <Loader />}\n      <ul>{actors}</ul>\n    </div>\n  );\n};\n\nexport default MovieCast;\n"],"names":["_useState","useState","_useState2","_slicedToArray","allCast","setAllCast","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","useEffect","getCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getActors","sent","t0","alert","finish","stop","apply","arguments","actors","cast","map","actor","_jsxs","children","_jsx","src","profile_path","concat","width","alt","name","character","id","className","Loader"],"sourceRoot":""}