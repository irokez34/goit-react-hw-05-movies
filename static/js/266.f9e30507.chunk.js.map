{"version":3,"file":"static/js/266.f9e30507.chunk.js","mappings":"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","sources":["components/MovieInfo.jsx","components/MovieAdditionInfo.jsx","components/MoviesDetailsComponent.jsx","pages/MovieDetails.jsx"],"sourcesContent":["export const MovieInfo = ({ movie }) => {\n  return (\n    <>\n      {movie && (\n        <div className=\"container-movie-info\">\n          <div className=\"movie-info\">\n            <img\n              src={`https://image.tmdb.org/t/p/w400/${movie.backdrop_path}`}\n              alt={movie.title || movie.name}\n              className=\"movie-img\"\n            />\n            <ul className=\"movie-list\">\n              <li>\n                <h2>{movie.title || movie.name}</h2>\n              </li>\n              <li>\n                <h3>Overview</h3>\n                <span>{movie.overview}</span>\n              </li>\n              <li>\n                <h3>Genres</h3>\n                <span>{movie.genres.map(genre => genre.name).join(', ')}</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","const { Link, useLocation } = require('react-router-dom');\n\nconst MovieAdditionInfo = () => {\n  const { state } = useLocation();\n\n  return (\n    <div className=\"addition-info\">\n      <ul>\n        <Link to=\"cast\" state={state}>\n          <li>\n            <h2>Cast</h2>\n          </li>\n        </Link>\n        <Link to=\"reviews\" state={state}>\n          <li>\n            <h2>Reviews</h2>\n          </li>\n        </Link>\n      </ul>\n    </div>\n  );\n};\nexport default MovieAdditionInfo;\n","import { Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { MovieInfo } from './MovieInfo';\nimport MovieAdditionInfo from './MovieAdditionInfo';\n\nexport const MoviesDetailsComponent = ({ movie }) => {\n  const { state } = useLocation();\n  const navigate = useNavigate();\n  const handleBack = () => {\n    navigate(state ?? '/', { state: 'go back' });\n  };\n\n  return (\n    <>\n      <button onClick={handleBack}>Go back</button>\n      <MovieInfo movie={movie} />\n      <MovieAdditionInfo />\n      <Outlet />\n    </>\n  );\n};\n","import { getSingleMovie } from 'fetch/trendingMovies';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../pages/stylePages/movieDetails.css';\nimport Loader from 'components/Loader';\nimport { MoviesDetailsComponent } from 'components/MoviesDetailsComponent';\n const Movie = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getSingleMovie(movieId);\n        setMovie(data);\n      } catch (error) {\n        alert('Виникла помилка');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    movieId && getMovie();\n  }, [movieId]);\n\n  return (\n    <div className=\"movie-container\">\n      {isLoading && <Loader />}\n      {movie ? <MoviesDetailsComponent movie={movie} /> : <h2>No info</h2>}\n    </div>\n  );\n};\nexport default Movie;"],"names":["MovieInfo","_ref","movie","_jsx","_Fragment","children","className","_jsxs","src","concat","backdrop_path","alt","title","name","overview","genres","map","genre","join","_require","require","Link","useLocation","state","to","MoviesDetailsComponent","navigate","useNavigate","onClick","MovieAdditionInfo","Outlet","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","useEffect","getMovie","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getSingleMovie","sent","t0","alert","finish","stop","apply","arguments","Loader"],"sourceRoot":""}