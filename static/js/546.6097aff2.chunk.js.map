{"version":3,"file":"static/js/546.6097aff2.chunk.js","mappings":"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","sources":["components/MovieList.jsx","components/searchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport './styleComponents/MovieList.css';\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  if (!movies) {\n    return <p>No avaible films</p>;\n  }\n\n  return (\n    <ul className=\"movies-list\">\n      {movies.map(movie => (\n        <Link to={`/movies/${movie.id}`} key={movie.id} state={location}>\n          <li className=\"movies-item\">\n            <span>{movie.title || movie.name}</span>\n          </li>\n        </Link>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const SearchForm = () => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const handleChange = ({ target: { value } }) => {\n    setQuery('');\n    setQuery(value);\n  };\n\n  const handleSubmit = e => {\n    setSearchParams({ query });\n    e.preventDefault();\n  };\n  useEffect(() => {\n    !query && setQuery(searchParams.get('query'));\n  }, [searchParams, query]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <input\n          type=\"text\"\n          name=\"search\"\n          className=\"movies-search\"\n          id=\"moviesInputSeatch\"\n          value={query}\n          onChange={handleChange}\n        />\n      </div>\n      <button>Search</button>\n    </form>\n  );\n};\n","import Loader from 'components/Loader';\nimport MovieList from 'components/MovieList';\nimport { SearchForm } from 'components/searchForm';\n\nimport { getSearchProducts } from 'fetch/trendingMovies';\nimport { useEffect, useState } from 'react';\nimport { useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\n const Movies = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n\n  const getMovieWithSearch = useCallback(async query => {\n    try {\n      setIsLoading(true);\n      const resp = await getSearchProducts(query);\n      setMovies(resp);\n    } catch (error) {\n      alert('Помилка');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    getMovieWithSearch(searchQuery);\n  }, [searchParams, getMovieWithSearch]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <SearchForm />\n      {!movies.length ? <h2>not found</h2> : <MovieList movies={movies} />}\n    </>\n  );\n};\nexport default Movies;"],"names":["_ref","movies","location","useLocation","_jsx","className","children","map","movie","Link","to","concat","id","state","title","name","SearchForm","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","get","_jsxs","onSubmit","e","preventDefault","type","value","onChange","target","isLoading","setIsLoading","_useState3","_useState4","setMovies","getMovieWithSearch","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","getSearchProducts","sent","t0","alert","finish","stop","_x","apply","arguments","searchQuery","_Fragment","Loader","length","MovieList"],"sourceRoot":""}