{"version":3,"file":"static/js/546.1952254d.chunk.js","mappings":"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","sources":["components/MovieList.jsx","components/searchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport './styleComponents/MovieList.css';\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  if (movies.length <= 0) {\n    return <p>No avaible films</p>;\n  }\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <ul className=\"movies-list\">\n      {movies.map(movie => (\n        <Link to={`/movies/${movie.id}`} key={movie.id} state={location}>\n          <li className=\"movies-item\">\n            <span>{movie.title || movie.name}</span>\n            <img\n              src={\n                movie.backdrop_path\n                  ? `https://image.tmdb.org/t/p/w300/${movie.backdrop_path}`\n                  : defaultImg\n              }\n              alt={movie.title || movie.name}\n              className=\"movie-img\"\n            />\n          </li>\n        </Link>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const SearchForm = () => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const handleChange = ({ target: { value } }) => {\n    setQuery('');\n    setQuery(value);\n  };\n\n  const handleSubmit = e => {\n    setSearchParams({ query });\n    e.preventDefault();\n  };\n  useEffect(() => {\n    !query && setQuery(searchParams.get('query'));\n  }, [searchParams, query]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <input\n          type=\"text\"\n          name=\"search\"\n          className=\"movies-search\"\n          id=\"moviesInputSeatch\"\n          value={query}\n          onChange={handleChange}\n        />\n      </div>\n      <button>Search</button>\n    </form>\n  );\n};\n","import Loader from 'components/Loader';\nimport MovieList from 'components/MovieList';\nimport { SearchForm } from 'components/searchForm';\n\nimport { getSearchProducts } from 'fetch/trendingMovies';\nimport { useEffect, useState } from 'react';\nimport { useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\n const Movies = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n\n  const getMovieWithSearch = useCallback(async query => {\n    try {\n      setIsLoading(true);\n      const resp = await getSearchProducts(query);\n      setMovies(resp);\n    } catch (error) {\n      alert('Помилка');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    getMovieWithSearch(searchQuery);\n  }, [searchParams, getMovieWithSearch]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <SearchForm />\n      {!movies.length ? <h2>not found</h2> : <MovieList movies={movies} />}\n    </>\n  );\n};\nexport default Movies;"],"names":["_ref","movies","location","useLocation","length","_jsx","children","className","map","movie","Link","to","concat","id","state","_jsxs","title","name","src","backdrop_path","alt","SearchForm","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","get","onSubmit","e","preventDefault","type","value","onChange","target","isLoading","setIsLoading","_useState3","_useState4","setMovies","getMovieWithSearch","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","getSearchProducts","sent","t0","alert","finish","stop","_x","apply","arguments","searchQuery","_Fragment","Loader","MovieList"],"sourceRoot":""}