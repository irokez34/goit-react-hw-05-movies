{"version":3,"file":"static/js/838.f6310d9b.chunk.js","mappings":"wQA8CA,EAzCqB,WACnB,IAAAA,GAA4BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACtBG,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEC,OAFDF,EAAAC,KAAA,EAElBX,GAAa,GAAMU,EAAAE,KAAA,GACAC,EAAAA,EAAAA,IAAWZ,GAAS,KAAD,EAAhCQ,EAAIC,EAAAI,KACVlB,EAAUa,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEhBM,MAAM,yFAAmB,QAEL,OAFKN,EAAAC,KAAA,GAEzBX,GAAa,GAAOU,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAV,EAAA,wBAEvB,kBAVkB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAYnBhB,GACF,GAAG,CAACH,IACJ,IAAMoB,EACJ1B,GACAA,EAAO2B,KAAI,SAAAC,GAAM,OACfC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKF,EAAOA,UACZG,EAAAA,EAAAA,KAAA,KAAAD,SAAIF,EAAOI,YAFJJ,EAAOK,GAGX,IAGT,OACEJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,gBAAeJ,SAAA,CAC3B1B,IAAa2B,EAAAA,EAAAA,KAACI,EAAAA,EAAM,IACpBnC,GAAUA,EAAOoC,QAChBL,EAAAA,EAAAA,KAAA,MAAIG,UAAU,eAAcJ,SAAEJ,KAE9BK,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAIZ,C","sources":["components/MovieReviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getReviews } from 'fetch/trendingMovies';\nimport { useParams } from 'react-router-dom';\nimport Loader from './Loader';\nimport './styleComponents/MovieReviews.css';\nconst MovieReviews = () => {\n  const [review, setReview] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getAllReviews = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getReviews(movieId);\n        setReview(data);\n      } catch (error) {\n        alert('Виникла помилка');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getAllReviews();\n  }, [movieId]);\n  const reviews =\n    review &&\n    review.map(author => (\n      <li key={author.id}>\n        <h2>{author.author}</h2>\n        <p>{author.content}</p>\n      </li>\n    ));\n\n  return (\n    <div className=\"movie-reviews\">\n      {isLoading && <Loader />}\n      {review && review.length ? (\n        <ul className=\"reviews-list\">{reviews}</ul>\n      ) : (\n        <h2>No Reviews</h2>\n      )}\n    </div>\n  );\n};\n\nexport default MovieReviews;\n"],"names":["_useState","useState","_useState2","_slicedToArray","review","setReview","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","useEffect","getAllReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getReviews","sent","t0","alert","finish","stop","apply","arguments","reviews","map","author","_jsxs","children","_jsx","content","id","className","Loader","length"],"sourceRoot":""}