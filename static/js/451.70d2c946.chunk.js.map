{"version":3,"file":"static/js/451.70d2c946.chunk.js","mappings":"oMAgCA,EA9BkB,SAAHA,GAAoB,IAAdC,EAAMD,EAANC,OACbC,GAAWC,EAAAA,EAAAA,MACjB,GAAIF,EAAOG,QAAU,EACnB,OAAOC,EAAAA,EAAAA,KAAA,KAAAC,SAAG,qBAKZ,OACED,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAaD,SACxBL,EAAOO,KAAI,SAAAC,GAAK,OACfJ,EAAAA,EAAAA,KAACK,EAAAA,KAAI,CAACC,GAAE,WAAAC,OAAaH,EAAMI,IAAqBC,MAAOZ,EAASI,UAC9DS,EAAAA,EAAAA,MAAA,MAAIR,UAAU,cAAaD,SAAA,EACzBD,EAAAA,EAAAA,KAAA,QAAAC,SAAOG,EAAMO,OAASP,EAAMQ,QAC5BZ,EAAAA,EAAAA,KAAA,OACEa,IACET,EAAMU,cAAa,mCAAAP,OACoBH,EAAMU,eAXzD,8EAcUC,IAAKX,EAAMO,OAASP,EAAMQ,KAC1BV,UAAU,kBAVsBE,EAAMI,GAarC,KAIf,C,wJCIA,EA7Ba,WACX,IAAAQ,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCpB,EAAMsB,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAiB9B,OAhBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAA/B,GAAAgC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,OAFFF,EAAAC,KAAA,EAEjBR,GAAa,GAAMO,EAAAE,KAAA,GACAC,EAAAA,EAAAA,MAAY,KAAD,EAAxBJ,EAAIC,EAAAI,KACVC,QAAQC,IAAIP,EAAKQ,SACjBR,GAAQV,EAAUU,EAAKQ,SAASP,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEhCS,MAAM,yFAAmB,QAEL,OAFKT,EAAAC,KAAA,GAEzBR,GAAa,GAAOO,EAAAU,OAAA,6BAAAV,EAAAW,OAAA,GAAAb,EAAA,wBAEvB,kBAXiB,OAAAlC,EAAAgD,MAAA,KAAAC,UAAA,KAYlBlB,GACF,GAAG,KAGDhB,EAAAA,EAAAA,MAAAmC,EAAAA,SAAA,CAAA5C,SAAA,CACGsB,IAAavB,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,KACrBpC,EAAAA,EAAAA,MAAA,OAAAT,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAIE,UAAU,QAAOD,SAAC,mBACrBL,GAAUA,EAAOG,OAAS,IAAKC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAS,CAACnD,OAAQA,SAI3D,C","sources":["components/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport './styleComponents/MovieList.css';\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  if (movies.length <= 0) {\n    return <p>No avaible films</p>;\n  }\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <ul className=\"movies-list\">\n      {movies.map(movie => (\n        <Link to={`/movies/${movie.id}`} key={movie.id} state={location}>\n          <li className=\"movies-item\">\n            <span>{movie.title || movie.name}</span>\n            <img\n              src={\n                movie.backdrop_path\n                  ? `https://image.tmdb.org/t/p/w300/${movie.backdrop_path}`\n                  : defaultImg\n              }\n              alt={movie.title || movie.name}\n              className=\"movie-img\"\n            />\n          </li>\n        </Link>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useEffect, useState } from 'react';\nimport { getMovies } from 'fetch/trendingMovies';\nimport Loader from 'components/Loader';\nimport MovieList from 'components/MovieList';\nimport './stylePages/Home.css';\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const getAllMovies = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMovies();\n        console.log(data.results);\n        data && setMovies(data.results);\n      } catch (error) {\n        alert('Виникла помилка');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getAllMovies();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <div>\n        <h2 className=\"title\">Trending today</h2>\n        {movies && movies.length > 0 && <MovieList movies={movies} />}\n      </div>\n    </>\n  );\n};\nexport default Home;\n"],"names":["_ref","movies","location","useLocation","length","_jsx","children","className","map","movie","Link","to","concat","id","state","_jsxs","title","name","src","backdrop_path","alt","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","isLoading","setIsLoading","useEffect","getAllMovies","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovies","sent","console","log","results","t0","alert","finish","stop","apply","arguments","_Fragment","Loader","MovieList"],"sourceRoot":""}